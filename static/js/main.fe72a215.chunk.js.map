{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","search","e","setState","searchText","target","value","state","fetch","then","response","json","console","log","this","filterMonsters","filter","toLowerCase","includes","class","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,GCFE,I,kBDEK,SAAAC,GAClB,OAAS,sBAAKC,UAAU,iBAAf,UACL,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BAClB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,aEFdC,EAAW,SAAAR,GACxB,OAAO,qBAAKC,UAAU,YAAf,SAEGD,EAAMS,SAASC,KAAI,SAAAN,GAClB,OAAO,cAAC,EAAD,CAAuBA,QAASA,EAAhC,cAAWA,EAAQC,UCPxBM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACrC,OAAQ,uBAAOC,KAAK,SACnBb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCoDCG,E,kDAlDb,aAAc,IAAD,8BACX,gBAcFC,OAAQ,SAACC,GACP,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,WAAY,IAJH,E,gEAQO,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAAQF,MAAK,SAAAC,GACxFE,QAAQC,IAAIH,GACZ,EAAKP,SAAS,CAAEV,SAASiB,S,+BAQpB,IAAD,EAC0BI,KAAKP,MAA9Bd,EADD,EACCA,SAAUW,EADX,EACWA,WACXW,EAAiBtB,EAASuB,QAAO,SAAA5B,GACrC,GAAGA,EAAQE,KAAK2B,cAAcC,SAASd,EAAWa,eAChD,OAAO7B,KAIX,OACE,sBAAKH,UAAU,MAAf,UACE,oBAAIkC,MAAM,QAAV,sBACD,cAAC,EAAD,CACDvB,YAAc,kBACdC,aAAgBiB,KAAKb,SAEnB,cAAC,EAAD,CAAUR,SAAUsB,W,GApCVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fe72a215.chunk.js","sourcesContent":["import './card.styles.css'\n\nexport const Card = props =>{\n  return ( <div className=\"card-container\">\n      <img alt=\"image\" src={`https://robohash.org/${props.monster.id}f?set=set2&size=160x160`}></img>\n        <h1>{props.monster.name}</h1>\n        <h3>{props.monster.email}</h3>\n    </div>)\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport  './card-list.styles.css';\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = props => { \nreturn(<div className=\"card-list\">\n    {\n          props.monsters.map(monster => {\n           return <Card key={monster.id} monster={monster}> </Card>\n          })\n    }\n</div>)\n};\n","import './search-box.styles.css'\nexport const SearchBox = ({placeholder, handleChange}) =>{\n   return (<input type=\"search\" \n    className=\"search\"\n    placeholder={placeholder} \n    onChange={handleChange}\n    ></input>)\n}","import { Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/searchBox.component'\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchText: ''\n    }\n    // this.search = this.search.bind(this)\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response =>response.json()).then(response=>{\n      console.log(response)\n      this.setState({ monsters:response})\n    })\n  }\n\n  search =(e) =>{\n    this.setState({ searchText: e.target.value})\n  }\n\n  render(){\n    const {monsters, searchText } = this.state\n    const filterMonsters = monsters.filter(monster=>{\n      if(monster.name.toLowerCase().includes(searchText.toLowerCase())){\n        return monster\n      }\n    })\n\n    return (\n      <div className=\"App\">\n        <h1 class=\"title\">Monsters</h1>\n       <SearchBox\n      placeholder = 'search monsters'\n      handleChange = {this.search}\n       ></SearchBox>\n        <CardList monsters={filterMonsters}>\n\n        </CardList>\n\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n         { this.state.string  }\n        </p>\n        <button onClick={()=> this.setState({string: \"hello devanaboyina\"})}> change text</button>\n      </header> */}\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}